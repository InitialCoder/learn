<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ascend.demo.auth.dao.SystemAuthorizationDao" >
	<insert id="saveOne" parameterType="com.ascend.demo.auth.domain.SystemAuthorizationDO" useGeneratedKeys="true" keyProperty="id">
		insert into le_user_authorization(
			`user_account`,
			`role_code`,
			`auth_area`,
			`auth_data`
		)values(
			#{userAccount},
			#{roleCode},
			#{authArea},
			#{authData}
		)
	</insert>
	
	<update id="update" parameterType="com.ascend.demo.auth.domain.SystemAuthorizationDO">
		update le_user_authorization 
			<set> <!-- 使用set元素，动态包含需要更新的列 ，set 元素会动态前置 SET 关键字，同时也会删掉无关的逗号-->
			user_account=#{userAccount},
			role_code=#{roleCode},
			auth_area=#{authArea},
			auth_data=#{authData},
			</set>
		where id=#{id};
	</update>
	<!-- <update id="update" parameterType="com.ascend.demo.auth.domain.SystemAuthorizationDO">
		update le_user_authorization set
			user_account=#{userAccount},
			role_id=#{roleId},
			auth_area=#{authArea},
			auth_data=#{authData},
		where id=#{id};
	</update> -->
	
	<select id="getByid" parameterType="String" resultType="com.ascend.demo.auth.domain.SystemAuthorizationDO">
		select * from le_user_authorization where id=#{id}
	</select>
	
	<select id="getByUserAccont" parameterType="String" resultType="com.ascend.demo.auth.domain.SystemAuthorizationDO">
		select * from le_user_authorization where user_account=#{userAccount}
	</select>
	
	<select id="findAll" resultType="com.ascend.demo.auth.domain.SystemAuthorizationDO">
		select * from le_user_authorization
	</select>
	
	<select id="findByWhere" parameterType="com.ascend.demo.auth.domain.dto.SystemAuthorizationDTO" 
		resultType="com.ascend.demo.auth.domain.SystemAuthorizationDO">
		
		select * from le_user_authorization 
		<where> <!-- 使用where 标签，会根据子元素是否返回语句动态添加where关键字 ，条件语句中可以使用choose, when, otherwise 作为开关语句-->
			<if test="userAccount != null"> and instr(user_account,#{userAccount})>0</if>
			<if test="roleCode != null"> and instr(roleCode,#{role})>0</if>
		</where>
	</select>
	
	<delete id="deleteById" parameterType="String" >
		delete from le_user_authorization where id=#{id}
	</delete>
	
</mapper>